;; Sema
;; 19 declarations
;; 49 entities
;; 19 symbols
;; 391 instructions
;; 68 values
;; 47 types
;; 33 lists
;; 81 strings
;; 1048685/1347968 comptime memory used/allocated bytes

%0 = global @"playground.sk::T" todo_complex(global) 
%0: typeof(struct{i32}) = .block (2 insts)
 ├ %1: typeof(struct{i32}) = .type                                       ; typeof(struct{i32})
 └ %2: void = .br target=(%0) payload=(1)                                ; void

%1 = fn @"playground.sk::struct_alloc"() -> void
%0: typeof(void) = .block (9 insts)
 ├ !%1: typeof(struct{i32}) = .global_get declaration=(%0)               ; typeof(struct{i32})
 ├ !%2: int = .constant                                                  ; int{ 123 }
 ├ !%3: void = .field_init field_name=("bar") value_inst=(%2)            ; void
 ├ !%4: struct{i32} = .type_init field_init_list=({%3}) type=(struct{i32}); struct{i32}
 ├ !%5: type = .typeof operand=(%4)                                      ; type(struct{i32})
 ├ %6: *struct{i32} = .alloc type=(struct{i32}) mutable=(false) name=("foo"); *struct{i32}@ffff8
 ├ %7: *i32 = .get_element_pointer base=(%6) index=(u64{ 0 })            ; *i32@ffff8
 ├ %8: i32 = .cast operand=(%2)                                          ; i32{ 123 }
 └ %9: void = .store operand=(%7) payload=(%8)                           ; void

%2 = fn @"playground.sk::struct_alloc_2"() -> void
%0: typeof(void) = .block (13 insts)
 ├ !%1: typeof(struct{i32}) = .global_get declaration=(%0)               ; typeof(struct{i32})
 ├ !%2: int = .constant                                                  ; int{ 123 }
 ├ !%3: void = .field_init field_name=("bar") value_inst=(%2)            ; void
 ├ !%4: struct{i32} = .type_init field_init_list=({%3}) type=(struct{i32}); struct{i32}
 ├ !%5: type = .typeof operand=(%4)                                      ; type(struct{i32})
 ├ %6: *struct{i32} = .alloc type=(struct{i32}) mutable=(true) name=("foo"); *struct{i32}[runtime]
 ├ %7: *i32 = .get_element_pointer base=(%6) index=(u64{ 0 })            ; *i32[runtime]
 ├ %8: i32 = .cast operand=(%2)                                          ; i32{ 123 }
 ├ %9: void = .store operand=(%7) payload=(%8)                           ; void
 ├ %10: *i32 = .get_element_pointer base=(%6) index=(u64{ 0 })           ; *i32[runtime]
 ├ !%11: int = .constant                                                 ; int{ 3 }
 ├ %12: i32 = .cast operand=(%11)                                        ; i32{ 3 }
 └ %13: void = .store operand=(%10) payload=(%12)                        ; void

%3 = fn @"playground.sk::struct_alloc_3"() -> void
%0: typeof(void) = .block (13 insts)
 ├ !%1: typeof(struct{i32}) = .global_get declaration=(%0)               ; typeof(struct{i32})
 ├ !%2: int = .constant                                                  ; int{ 123 }
 ├ !%3: void = .field_init field_name=("bar") value_inst=(%2)            ; void
 ├ !%4: struct{i32} = .type_init field_init_list=({%3}) type=(struct{i32}); struct{i32}
 ├ !%5: type = .typeof operand=(%4)                                      ; type(struct{i32})
 ├ %6: *struct{i32} = .alloc type=(struct{i32}) mutable=(true) name=("foo"); *struct{i32}[runtime]
 ├ %7: *i32 = .get_element_pointer base=(%6) index=(u64{ 0 })            ; *i32[runtime]
 ├ %8: i32 = .cast operand=(%2)                                          ; i32{ 123 }
 ├ %9: void = .store operand=(%7) payload=(%8)                           ; void
 ├ !%10: struct{i32} = .load operand=(%6)                                ; struct{i32}
 ├ !%11: type = .typeof operand=(%10)                                    ; type(struct{i32})
 ├ %12: *struct{i32} = .alloc type=(struct{i32}) mutable=(false) name=("foo2"); *struct{i32}[runtime]
 └ %13: void = .memcpy src=(%6) dest=(%12)                               ; void

%4 = fn @"playground.sk::struct_load"() -> void
%0: typeof(void) = .block (14 insts)
 ├ !%1: typeof(struct{i32}) = .global_get declaration=(%0)               ; typeof(struct{i32})
 ├ !%2: int = .constant                                                  ; int{ 123 }
 ├ !%3: void = .field_init field_name=("bar") value_inst=(%2)            ; void
 ├ !%4: struct{i32} = .type_init field_init_list=({%3}) type=(struct{i32}); struct{i32}
 ├ !%5: type = .typeof operand=(%4)                                      ; type(struct{i32})
 ├ %6: *struct{i32} = .alloc type=(struct{i32}) mutable=(false) name=("foo"); *struct{i32}@ffff0
 ├ %7: *i32 = .get_element_pointer base=(%6) index=(u64{ 0 })            ; *i32@ffff0
 ├ %8: i32 = .cast operand=(%2)                                          ; i32{ 123 }
 ├ %9: void = .store operand=(%7) payload=(%8)                           ; void
 ├ %10: *i32 = .get_element_pointer base=(%6) index=(u64{ 0 })           ; *i32@ffff0
 ├ %11: i32 = .load operand=(%10)                                        ; i32{ 123 }
 ├ !%12: type = .typeof operand=(%11)                                    ; type(i32)
 ├ %13: *i32 = .alloc type=(i32) mutable=(false) name=("bar")            ; *i32@fffe8
 └ %14: void = .store operand=(%13) payload=(%11)                        ; void

%5 = fn @"playground.sk::int_alloc"() -> void
%0: typeof(void) = .block (5 insts)
 ├ !%1: int = .constant                                                  ; int{ 10 }
 ├ !%2: typeof(i32) = .type                                              ; typeof(i32)
 ├ %3: *i32 = .alloc type=(i32) mutable=(false) name=("foo")             ; *i32@fffe0
 ├ %4: i32 = .cast operand=(%1)                                          ; i32{ 10 }
 └ %5: void = .store operand=(%3) payload=(%4)                           ; void

%6 = fn @"playground.sk::int_alloc_2"() -> void
%0: typeof(void) = .block (8 insts)
 ├ !%1: int = .constant                                                  ; int{ 10 }
 ├ !%2: typeof(i32) = .type                                              ; typeof(i32)
 ├ %3: *i32 = .alloc type=(i32) mutable=(true) name=("foo")              ; *i32[runtime]
 ├ %4: i32 = .cast operand=(%1)                                          ; i32{ 10 }
 ├ %5: void = .store operand=(%3) payload=(%4)                           ; void
 ├ !%6: int = .constant                                                  ; int{ 123 }
 ├ %7: i32 = .cast operand=(%6)                                          ; i32{ 123 }
 └ %8: void = .store operand=(%3) payload=(%7)                           ; void

%7 = fn @"playground.sk::int_load"() -> void
%0: typeof(void) = .block (9 insts)
 ├ !%1: int = .constant                                                  ; int{ 10 }
 ├ !%2: typeof(i32) = .type                                              ; typeof(i32)
 ├ %3: *i32 = .alloc type=(i32) mutable=(false) name=("foo")             ; *i32@fffd8
 ├ %4: i32 = .cast operand=(%1)                                          ; i32{ 10 }
 ├ %5: void = .store operand=(%3) payload=(%4)                           ; void
 ├ %6: i32 = .load operand=(%3)                                          ; i32{ 10 }
 ├ !%7: type = .typeof operand=(%6)                                      ; type(i32)
 ├ %8: *i32 = .alloc type=(i32) mutable=(false) name=("bar")             ; *i32@fffd0
 └ %9: void = .store operand=(%8) payload=(%6)                           ; void

%8 = fn @"playground.sk::array_alloc"() -> void
%0: typeof(void) = .block (22 insts)
 ├ !%1: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%2: int = .constant                                                  ; int{ 3 }
 ├ !%3: u64 = .cast operand=(%2)                                         ; u64{ 3 }
 ├ !%4: typeof([3]i32) = .type                                           ; typeof([3]i32)
 ├ !%5: int = .constant                                                  ; int{ 1 }
 ├ !%6: int = .constant                                                  ; int{ 2 }
 ├ !%7: int = .constant                                                  ; int{ 3 }
 ├ !%8: [3]i32 = .array_init items_list=({%5, %6, %7}) type=([3]i32)     ; [3]i32[runtime]
 ├ !%9: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%10: int = .constant                                                 ; int{ 3 }
 ├ !%11: u64 = .cast operand=(%10)                                       ; u64{ 3 }
 ├ !%12: typeof([3]i32) = .type                                          ; typeof([3]i32)
 ├ %13: *[3]i32 = .alloc type=([3]i32) mutable=(false) name=("foo")      ; *[3]i32@fffc8
 ├ %14: *i32 = .get_element_pointer base=(%13) index=(u64{ 0 })          ; *i32@fffc8
 ├ %15: i32 = .cast operand=(%5)                                         ; i32{ 1 }
 ├ %16: void = .store operand=(%14) payload=(%15)                        ; void
 ├ %17: *i32 = .get_element_pointer base=(%13) index=(u64{ 1 })          ; *i32@fffcc
 ├ %18: i32 = .cast operand=(%6)                                         ; i32{ 2 }
 ├ %19: void = .store operand=(%17) payload=(%18)                        ; void
 ├ %20: *i32 = .get_element_pointer base=(%13) index=(u64{ 2 })          ; *i32@fffd0
 ├ %21: i32 = .cast operand=(%7)                                         ; i32{ 3 }
 └ %22: void = .store operand=(%20) payload=(%21)                        ; void

%9 = fn @"playground.sk::array_alloc_2"() -> void
%0: typeof(void) = .block (28 insts)
 ├ !%1: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%2: int = .constant                                                  ; int{ 3 }
 ├ !%3: u64 = .cast operand=(%2)                                         ; u64{ 3 }
 ├ !%4: typeof([3]i32) = .type                                           ; typeof([3]i32)
 ├ !%5: int = .constant                                                  ; int{ 1 }
 ├ !%6: int = .constant                                                  ; int{ 2 }
 ├ !%7: int = .constant                                                  ; int{ 3 }
 ├ !%8: [3]i32 = .array_init items_list=({%5, %6, %7}) type=([3]i32)     ; [3]i32[runtime]
 ├ !%9: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%10: int = .constant                                                 ; int{ 3 }
 ├ !%11: u64 = .cast operand=(%10)                                       ; u64{ 3 }
 ├ !%12: typeof([3]i32) = .type                                          ; typeof([3]i32)
 ├ %13: *[3]i32 = .alloc type=([3]i32) mutable=(true) name=("foo")       ; *[3]i32[runtime]
 ├ %14: *i32 = .get_element_pointer base=(%13) index=(u64{ 0 })          ; *i32[runtime]
 ├ %15: i32 = .cast operand=(%5)                                         ; i32{ 1 }
 ├ %16: void = .store operand=(%14) payload=(%15)                        ; void
 ├ %17: *i32 = .get_element_pointer base=(%13) index=(u64{ 1 })          ; *i32[runtime]
 ├ %18: i32 = .cast operand=(%6)                                         ; i32{ 2 }
 ├ %19: void = .store operand=(%17) payload=(%18)                        ; void
 ├ %20: *i32 = .get_element_pointer base=(%13) index=(u64{ 2 })          ; *i32[runtime]
 ├ %21: i32 = .cast operand=(%7)                                         ; i32{ 3 }
 ├ %22: void = .store operand=(%20) payload=(%21)                        ; void
 ├ !%23: int = .constant                                                 ; int{ 0 }
 ├ !%24: u64 = .cast operand=(%23)                                       ; u64{ 0 }
 ├ %25: *i32 = .get_element_pointer base=(%13) index=(u64{ 0 })          ; *i32[runtime]
 ├ !%26: int = .constant                                                 ; int{ 4 }
 ├ %27: i32 = .cast operand=(%26)                                        ; i32{ 4 }
 └ %28: void = .store operand=(%25) payload=(%27)                        ; void

%10 = fn @"playground.sk::array_alloc_3"() -> void
%0: typeof(void) = .block (23 insts)
 ├ !%1: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%2: int = .constant                                                  ; int{ 3 }
 ├ !%3: u64 = .cast operand=(%2)                                         ; u64{ 3 }
 ├ !%4: typeof([3]i32) = .type                                           ; typeof([3]i32)
 ├ !%5: int = .constant                                                  ; int{ 1 }
 ├ !%6: int = .constant                                                  ; int{ 2 }
 ├ !%7: int = .constant                                                  ; int{ 3 }
 ├ !%8: [3]i32 = .array_init items_list=({%5, %6, %7}) type=([3]i32)     ; [3]i32[runtime]
 ├ !%9: type = .typeof operand=(%8)                                      ; type([3]i32)
 ├ %10: *[3]i32 = .alloc type=([3]i32) mutable=(false) name=("foo")      ; *[3]i32@fffc0
 ├ %11: *i32 = .get_element_pointer base=(%10) index=(u64{ 0 })          ; *i32@fffc0
 ├ %12: i32 = .cast operand=(%5)                                         ; i32{ 1 }
 ├ %13: void = .store operand=(%11) payload=(%12)                        ; void
 ├ %14: *i32 = .get_element_pointer base=(%10) index=(u64{ 1 })          ; *i32@fffc4
 ├ %15: i32 = .cast operand=(%6)                                         ; i32{ 2 }
 ├ %16: void = .store operand=(%14) payload=(%15)                        ; void
 ├ %17: *i32 = .get_element_pointer base=(%10) index=(u64{ 2 })          ; *i32@fffc8
 ├ %18: i32 = .cast operand=(%7)                                         ; i32{ 3 }
 ├ %19: void = .store operand=(%17) payload=(%18)                        ; void
 ├ !%20: [3]i32 = .load operand=(%10)                                    ; [3]i32@fffc0
 ├ !%21: type = .typeof operand=(%20)                                    ; type([3]i32)
 ├ %22: *[3]i32 = .alloc type=([3]i32) mutable=(false) name=("bar")      ; *[3]i32@fffb8
 └ %23: void = .memcpy src=(%10) dest=(%22)                              ; void

%11 = fn @"playground.sk::str_alloc_2"() -> void
%0: typeof(void) = .block (1 insts)
 └ %1: typeof(void) = comptime .block (24 insts)
    ├ !%2: [5]bchar = .constant                                             ; [5]bchar@100048
    ├ !%3: type = .typeof operand=(%2)                                      ; type([5]bchar)
    ├ %4: *[5]bchar = .alloc type=([5]bchar) mutable=(true) name=("foo")    ; *[5]bchar@fffb0
    ├ %5: void = .memcpy src=(%2) dest=(%4)                                 ; void
    ├ !%6: int = .constant                                                  ; int{ 0 }
    ├ !%7: u64 = .cast operand=(%6)                                         ; u64{ 0 }
    ├ %8: *bchar = .get_element_pointer base=(%4) index=(u64{ 0 })          ; *bchar@fffb0
    ├ %9: bchar = .load operand=(%8)                                        ; bchar{ 'H' }
    ├ !%10: type = .typeof operand=(%9)                                     ; type(bchar)
    ├ %11: *bchar = .alloc type=(bchar) mutable=(false) name=("a")          ; *bchar@fffa8
    ├ %12: void = .store operand=(%11) payload=(%9)                         ; void
    ├ !%13: int = .constant                                                 ; int{ 0 }
    ├ !%14: u64 = .cast operand=(%13)                                       ; u64{ 0 }
    ├ %15: *bchar = .get_element_pointer base=(%4) index=(u64{ 0 })         ; *bchar@fffb0
    ├ !%16: float = .constant                                               ; float{ 104 }
    ├ %17: bchar = .cast operand=(%16)                                      ; bchar{ 'h' }
    ├ %18: void = .store operand=(%15) payload=(%17)                        ; void
    ├ !%19: int = .constant                                                 ; int{ 0 }
    ├ !%20: u64 = .cast operand=(%19)                                       ; u64{ 0 }
    ├ %21: *bchar = .get_element_pointer base=(%4) index=(u64{ 0 })         ; *bchar@fffb0
    ├ %22: bchar = .load operand=(%21)                                      ; bchar{ 'h' }
    ├ !%23: type = .typeof operand=(%22)                                    ; type(bchar)
    ├ %24: *bchar = .alloc type=(bchar) mutable=(false) name=("b")          ; *bchar@fffa0
    └ %25: void = .store operand=(%24) payload=(%22)                        ; void

%12 = fn @"playground.sk::foo"(i32) -> i32
%0: i32 = .block (3 insts)
 ├ %1: i32 = .param index=(%0) name=("playground.sk::foo::a")            ; i32{ [runtime] }
 ├ %2: i32 = .param_get operand=(%1)                                     ; i32{ [runtime] }
 └ %3: void = .ret maybe_operand=(%2)                                    ; void

%13 = fn @"playground.sk::bar"(i32) -> i32
%0: i32 = .block (5 insts)
 ├ %1: i32 = .param index=(%0) name=("playground.sk::bar::a")            ; i32{ [runtime] }
 ├ !%2: fn(i32) i32 = .global_get declaration=(%14)                      ; fn(i32) i32
 ├ %3: i32 = .param_get operand=(%1)                                     ; i32{ [runtime] }
 ├ %4: i32 = .fn_call callee=(%2) callee_entity=(%15) callee_declaration=(%14) args_list=({%3}); i32{ [runtime] }
 └ %5: void = .ret maybe_operand=(%4)                                    ; void

%14 = fn @"playground.sk::rec"(i32) -> i32
%0: i32 = .block (6 insts)
 ├ %1: i32 = .param index=(%0) name=("playground.sk::rec::a")            ; i32{ [runtime] }
 ├ %2: i32 = .param_get operand=(%1)                                     ; i32{ [runtime] }
 ├ !%3: int = .constant                                                  ; int{ 10 }
 ├ %4: i32 = .cast operand=(%3)                                          ; i32{ 10 }
 ├ %5: bool = .lt lhs=(%2) rhs=(%4)                                      ; bool{ [runtime] }
 └ %6: if (%5)
    └ then: %7: typeof(i32) = .block (7 insts)
       ├ !%8: fn(i32) i32 = .global_get declaration=(%13)                      ; fn(i32) i32
       ├ !%9: int = .constant                                                  ; int{ 2 }
       ├ %10: i32 = .param_get operand=(%1)                                    ; i32{ [runtime] }
       ├ %11: i32 = .cast operand=(%9)                                         ; i32{ 2 }
       ├ %12: i32 = .mul lhs=(%11) rhs=(%10)                                   ; i32{ [runtime] }
       ├ %13: i32 = .fn_call callee=(%8) callee_entity=(%14) callee_declaration=(%13) args_list=({%12}); i32{ [runtime] }
       └ %14: void = .ret maybe_operand=(%13)                                  ; void

%15 = fn @"playground.sk::sum_array"() -> i32
%0: i32 = .block (39 insts)
 ├ !%1: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%2: int = .constant                                                  ; int{ 4 }
 ├ !%3: u64 = .cast operand=(%2)                                         ; u64{ 4 }
 ├ !%4: typeof([4]i32) = .type                                           ; typeof([4]i32)
 ├ !%5: int = .constant                                                  ; int{ 1 }
 ├ !%6: int = .constant                                                  ; int{ 2 }
 ├ !%7: int = .constant                                                  ; int{ 3 }
 ├ !%8: int = .constant                                                  ; int{ 4 }
 ├ !%9: [4]i32 = .array_init items_list=({%5, %6, %7, %8}) type=([4]i32) ; [4]i32[runtime]
 ├ !%10: typeof(i32) = .type                                             ; typeof(i32)
 ├ !%11: int = .constant                                                 ; int{ 4 }
 ├ !%12: u64 = .cast operand=(%11)                                       ; u64{ 4 }
 ├ !%13: typeof([4]i32) = .type                                          ; typeof([4]i32)
 ├ %14: *[4]i32 = .alloc type=([4]i32) mutable=(false) name=("arr")      ; *[4]i32@fff98
 ├ %15: *i32 = .get_element_pointer base=(%14) index=(u64{ 0 })          ; *i32@fff98
 ├ %16: i32 = .cast operand=(%5)                                         ; i32{ 1 }
 ├ %17: void = .store operand=(%15) payload=(%16)                        ; void
 ├ %18: *i32 = .get_element_pointer base=(%14) index=(u64{ 1 })          ; *i32@fff9c
 ├ %19: i32 = .cast operand=(%6)                                         ; i32{ 2 }
 ├ %20: void = .store operand=(%18) payload=(%19)                        ; void
 ├ %21: *i32 = .get_element_pointer base=(%14) index=(u64{ 2 })          ; *i32@fffa0
 ├ %22: i32 = .cast operand=(%7)                                         ; i32{ 3 }
 ├ %23: void = .store operand=(%21) payload=(%22)                        ; void
 ├ %24: *i32 = .get_element_pointer base=(%14) index=(u64{ 3 })          ; *i32@fffa4
 ├ %25: i32 = .cast operand=(%8)                                         ; i32{ 4 }
 ├ %26: void = .store operand=(%24) payload=(%25)                        ; void
 ├ !%27: int = .constant                                                 ; int{ 0 }
 ├ !%28: typeof(i32) = .type                                             ; typeof(i32)
 ├ %29: *i32 = .alloc type=(i32) mutable=(true) name=("i")               ; *i32[runtime]
 ├ %30: i32 = .cast operand=(%27)                                        ; i32{ 0 }
 ├ %31: void = .store operand=(%29) payload=(%30)                        ; void
 ├ !%32: int = .constant                                                 ; int{ 0 }
 ├ !%33: typeof(i32) = .type                                             ; typeof(i32)
 ├ %34: *i32 = .alloc type=(i32) mutable=(true) name=("sum")             ; *i32[runtime]
 ├ %35: i32 = .cast operand=(%32)                                        ; i32{ 0 }
 ├ %36: void = .store operand=(%34) payload=(%35)                        ; void
 ├ %37 loop
 │  └ %38: void = .block (7 insts)
 │     ├ %39: i32 = .load operand=(%29)                                        ; i32{ [runtime] }
 │     ├ !%40: u64 = .constant                                                 ; u64{ 4 }
 │     ├ !%41: [builtin_as] = .constant operand=(%40)                          ; todo_complex(builtin_member)
 │     ├ !%42: typeof(i32) = .type                                             ; typeof(i32)
 │     ├ %43: i32 = .reinterpret operand=(%40)                                 ; i32{ 4 }
 │     ├ %44: bool = .lt lhs=(%39) rhs=(%43)                                   ; bool{ [runtime] }
 │     └ %45: if (%44)
 │        └ then: %46: typeof(i32) = .block (12 insts)
 │           ├ %47: i32 = .load operand=(%34)                                        ; i32{ [runtime] }
 │           ├ %48: i32 = .load operand=(%29)                                        ; i32{ [runtime] }
 │           ├ %49: *i32 = .get_element_pointer base=(%14) index=(%48)               ; *i32[runtime]
 │           ├ %50: i32 = .load operand=(%49)                                        ; i32{ [runtime] }
 │           ├ %51: i32 = .add lhs=(%47) rhs=(%50)                                   ; i32{ [runtime] }
 │           ├ %52: void = .store operand=(%34) payload=(%51)                        ; void
 │           ├ %53: i32 = .load operand=(%29)                                        ; i32{ [runtime] }
 │           ├ !%54: int = .constant                                                 ; int{ 1 }
 │           ├ %55: i32 = .cast operand=(%54)                                        ; i32{ 1 }
 │           ├ %56: i32 = .add lhs=(%53) rhs=(%55)                                   ; i32{ [runtime] }
 │           ├ %57: void = .store operand=(%29) payload=(%56)                        ; void
 │           └ %58: void = .br target=(%37) payload=(null)                           ; void
 ├ %59: i32 = .load operand=(%34)                                        ; i32{ [runtime] }
 └ %60: void = .ret maybe_operand=(%59)                                  ; void

%16 = fn @"playground.sk::explicit_casting"() -> i32
%0: typeof(i32) = .block (10 insts)
 ├ !%1: float = .constant                                                ; float{ 123.2 }
 ├ !%2: [builtin_as] = .constant operand=(%1)                            ; todo_complex(builtin_member)
 ├ !%3: typeof(i32) = .type                                              ; typeof(i32)
 ├ !%4: i32 = .cast operand=(%1)                                         ; i32{ 123 }
 ├ !%5: [builtin_as] = .constant operand=(%4)                            ; todo_complex(builtin_member)
 ├ !%6: typeof(u8) = .type                                               ; typeof(u8)
 ├ !%7: u8 = .reinterpret operand=(%4)                                   ; u8{ 123 }
 ├ !%8: [builtin_as] = .constant operand=(%7)                            ; todo_complex(builtin_member)
 ├ !%9: typeof(f32) = .type                                              ; typeof(f32)
 └ %10: f32 = .convert_int_to_float operand=(%7)                         ; f32{ 123 }

%17 = pub fn @"playground.sk::fib"(i32) -> i32
%0: i32 = .block (16 insts)
 ├ %1: i32 = .param index=(%0) name=("playground.sk::fib::n")            ; i32{ [runtime] }
 ├ !%2: int = .constant                                                  ; int{ 0 }
 ├ !%3: typeof(i32) = .type                                              ; typeof(i32)
 ├ %4: *i32 = .alloc type=(i32) mutable=(true) name=("a")                ; *i32[runtime]
 ├ %5: i32 = .cast operand=(%2)                                          ; i32{ 0 }
 ├ %6: void = .store operand=(%4) payload=(%5)                           ; void
 ├ !%7: int = .constant                                                  ; int{ 1 }
 ├ !%8: typeof(i32) = .type                                              ; typeof(i32)
 ├ %9: *i32 = .alloc type=(i32) mutable=(true) name=("b")                ; *i32[runtime]
 ├ %10: i32 = .cast operand=(%7)                                         ; i32{ 1 }
 ├ %11: void = .store operand=(%9) payload=(%10)                         ; void
 ├ %12: i32 = .param_get operand=(%1)                                    ; i32{ [runtime] }
 ├ !%13: int = .constant                                                 ; int{ 0 }
 ├ %14: i32 = .cast operand=(%13)                                        ; i32{ 0 }
 ├ %15: bool = .gt lhs=(%12) rhs=(%14)                                   ; bool{ [runtime] }
 └ %16: if (%15)
    └ then: %17: typeof(i32) = .block (3 insts)
       ├ %18 loop
       │  └ %19: void = .block (5 insts)
       │     ├ %20: i32 = .param_get operand=(%1)                                    ; i32{ [runtime] }
       │     ├ !%21: int = .constant                                                 ; int{ 1 }
       │     ├ %22: i32 = .cast operand=(%21)                                        ; i32{ 1 }
       │     ├ %23: bool = .gt lhs=(%20) rhs=(%22)                                   ; bool{ [runtime] }
       │     └ %24: if (%23)
       │        └ then: %25: typeof(i32) = .block (16 insts)
       │           ├ %26: i32 = .load operand=(%4)                                         ; i32{ [runtime] }
       │           ├ %27: i32 = .load operand=(%9)                                         ; i32{ [runtime] }
       │           ├ %28: i32 = .add lhs=(%26) rhs=(%27)                                   ; i32{ [runtime] }
       │           ├ !%29: typeof(i32) = .type                                             ; typeof(i32)
       │           ├ %30: *i32 = .alloc type=(i32) mutable=(true) name=("t")               ; *i32[runtime]
       │           ├ %31: void = .store operand=(%30) payload=(%28)                        ; void
       │           ├ %32: i32 = .load operand=(%9)                                         ; i32{ [runtime] }
       │           ├ %33: void = .store operand=(%4) payload=(%32)                         ; void
       │           ├ %34: i32 = .load operand=(%30)                                        ; i32{ [runtime] }
       │           ├ %35: void = .store operand=(%9) payload=(%34)                         ; void
       │           ├ %36: i32 = .param_get operand=(%1)                                    ; i32{ [runtime] }
       │           ├ !%37: int = .constant                                                 ; int{ 1 }
       │           ├ %38: i32 = .cast operand=(%37)                                        ; i32{ 1 }
       │           ├ %39: i32 = .sub lhs=(%36) rhs=(%38)                                   ; i32{ [runtime] }
       │           ├ %40: void = .param_set operand=(%1) payload=(%39)                     ; void
       │           └ %41: void = .br target=(%18) payload=(null)                           ; void
       ├ %42: i32 = .load operand=(%9)                                         ; i32{ [runtime] }
       └ %43: void = .ret maybe_operand=(%42)                                  ; void

%18 = fn @"playground.sk::main"() -> void
%0: typeof(void) = .block (7 insts)
 ├ !%1: fn(i32) i32 = .global_get declaration=(%17)                      ; fn(i32) i32
 ├ !%2: int = .constant                                                  ; int{ 10 }
 ├ %3: i32 = .cast operand=(%2)                                          ; i32{ 10 }
 ├ %4: i32 = .fn_call callee=(%1) callee_entity=(%18) callee_declaration=(%17) args_list=({%3}); i32{ [runtime] }
 ├ !%5: type = .typeof operand=(%4)                                      ; type(i32)
 ├ %6: *i32 = .alloc type=(i32) mutable=(false) name=("a")               ; *i32[runtime]
 └ %7: void = .store operand=(%6) payload=(%4)                           ; void

