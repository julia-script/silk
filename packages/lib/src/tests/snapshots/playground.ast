;; AST
;; 594 Nodes
;; 751 Tokens
;; 336 Interned Lists

%0 = .struct_decl - tok[0..751]
 └ members_list: 142 items
    ├ %6 = .type_decl - tok[0..9]
    │  ├ name: %1 = .identifier - tok[1..1]
    │  │  └ token: .identifier 'T'
    │  ├ type: NONE
    │  └ value: %2 = .struct_decl - tok[3..9]
    │     └ members_list: 1 items
    │        └ %5 = .struct_field - tok[6..8]
    │           ├ name: %3 = .identifier - tok[5..5]
    │           │  └ token: .identifier 'bar'
    │           ├ type: %4 = .ty_i32 - tok[7..7]
    │           │  └ token: .keyword_i32 'i32'
    │           └ default_value: NONE
    ├ %23 = .fn_decl - tok[11..33]
    │  ├ proto: %9 = .fn_proto - tok[12..15]
    │  │  ├ name: %7 = .identifier - tok[12..12]
    │  │  │  └ token: .identifier 'struct_alloc'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %8 = .ty_void - tok[15..15]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %22 = .block - tok[16..32]
    │     └ list: 6 items
    │        ├ %10 = .comment_line - tok[17..18]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %11 = .comment_line - tok[18..19]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %12 = .comment_line - tok[19..20]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %13 = .comment_line - tok[20..21]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %14 = .comment_line - tok[21..22]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        └ %21 = .const_decl - tok[22..30]
    │           ├ name: %15 = .identifier - tok[23..23]
    │           │  └ token: .identifier 'foo'
    │           ├ type: NONE
    │           └ value: %20 = .type_init - tok[25..31]
    │              ├ type: %16 = .identifier - tok[25..25]
    │              │  └ token: .identifier 'T'
    │              └ field_init_list: 1 items
    │                 └ %19 = .field_init - tok[27..29]
    │                    ├ name: %17 = .identifier - tok[27..27]
    │                    │  └ token: .identifier 'bar'
    │                    └ value: %18 = .number_literal - tok[29..29]
    │                       └ token: .number_literal '123'
    ├ %49 = .fn_decl - tok[33..65]
    │  ├ proto: %26 = .fn_proto - tok[34..37]
    │  │  ├ name: %24 = .identifier - tok[34..34]
    │  │  │  └ token: .identifier 'struct_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %25 = .ty_void - tok[37..37]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %48 = .block - tok[38..64]
    │     └ list: 11 items
    │        ├ %27 = .comment_line - tok[39..40]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %28 = .comment_line - tok[40..41]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %29 = .comment_line - tok[41..42]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %30 = .comment_line - tok[42..43]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %31 = .comment_line - tok[43..44]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        ├ %38 = .var_decl - tok[44..52]
    │        │  ├ name: %32 = .identifier - tok[45..45]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: NONE
    │        │  └ value: %37 = .type_init - tok[47..53]
    │        │     ├ type: %33 = .identifier - tok[47..47]
    │        │     │  └ token: .identifier 'T'
    │        │     └ field_init_list: 1 items
    │        │        └ %36 = .field_init - tok[49..51]
    │        │           ├ name: %34 = .identifier - tok[49..49]
    │        │           │  └ token: .identifier 'bar'
    │        │           └ value: %35 = .number_literal - tok[51..51]
    │        │              └ token: .number_literal '123'
    │        ├ %39 = .comment_line - tok[54..55]
    │        │  └ token: .comment '// %5 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %40 = .comment_line - tok[55..56]
    │        │  └ token: .comment '// %6 = const 3                          ; 3 int'
    │        ├ %41 = .comment_line - tok[56..57]
    │        │  └ token: .comment '// %7 = as i32 %6                        ; 3 i32'
    │        ├ %42 = .comment_line - tok[57..58]
    │        │  └ token: .comment '// %8 = store %5 %7                    ; void'
    │        └ %47 = .assign - tok[58..62]
    │           ├ lhs: %45 = .prop_access - tok[58..60]
    │           │  ├ lhs: %43 = .identifier - tok[58..58]
    │           │  │  └ token: .identifier 'foo'
    │           │  └ rhs: %44 = .identifier - tok[60..60]
    │           │     └ token: .identifier 'bar'
    │           └ rhs: %46 = .number_literal - tok[62..62]
    │              └ token: .number_literal '3'
    ├ %71 = .fn_decl - tok[65..94]
    │  ├ proto: %52 = .fn_proto - tok[66..69]
    │  │  ├ name: %50 = .identifier - tok[66..66]
    │  │  │  └ token: .identifier 'struct_alloc_3'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %51 = .ty_void - tok[69..69]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %70 = .block - tok[70..93]
    │     └ list: 9 items
    │        ├ %53 = .comment_line - tok[71..72]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %54 = .comment_line - tok[72..73]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %55 = .comment_line - tok[73..74]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %56 = .comment_line - tok[74..75]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %57 = .comment_line - tok[75..76]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        ├ %64 = .var_decl - tok[76..84]
    │        │  ├ name: %58 = .identifier - tok[77..77]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: NONE
    │        │  └ value: %63 = .type_init - tok[79..85]
    │        │     ├ type: %59 = .identifier - tok[79..79]
    │        │     │  └ token: .identifier 'T'
    │        │     └ field_init_list: 1 items
    │        │        └ %62 = .field_init - tok[81..83]
    │        │           ├ name: %60 = .identifier - tok[81..81]
    │        │           │  └ token: .identifier 'bar'
    │        │           └ value: %61 = .number_literal - tok[83..83]
    │        │              └ token: .number_literal '123'
    │        ├ %65 = .comment_line - tok[86..87]
    │        │  └ token: .comment '// %5 = alloc T                          ; *T@ptr:4'
    │        ├ %66 = .comment_line - tok[87..88]
    │        │  └ token: .comment '// %6 = memcpy %5 %0                     ; void'
    │        └ %69 = .const_decl - tok[88..91]
    │           ├ name: %67 = .identifier - tok[89..89]
    │           │  └ token: .identifier 'foo2'
    │           ├ type: NONE
    │           └ value: %68 = .identifier - tok[91..91]
    │              └ token: .identifier 'foo'
    ├ %97 = .fn_decl - tok[94..127]
    │  ├ proto: %74 = .fn_proto - tok[95..98]
    │  │  ├ name: %72 = .identifier - tok[95..95]
    │  │  │  └ token: .identifier 'struct_load'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %73 = .ty_void - tok[98..98]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %96 = .block - tok[99..126]
    │     └ list: 11 items
    │        ├ %75 = .comment_line - tok[100..101]
    │        │  └ token: .comment '// %0 = alloc T                          ; *T@ptr:0'
    │        ├ %76 = .comment_line - tok[101..102]
    │        │  └ token: .comment '// %1 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %77 = .comment_line - tok[102..103]
    │        │  └ token: .comment '// %2 = const 123                        ; 123 int'
    │        ├ %78 = .comment_line - tok[103..104]
    │        │  └ token: .comment '// %3 = as i32 %2                        ; 123 i32'
    │        ├ %79 = .comment_line - tok[104..105]
    │        │  └ token: .comment '// %4 = store %1 %3                      ; void'
    │        ├ %86 = .const_decl - tok[105..113]
    │        │  ├ name: %80 = .identifier - tok[106..106]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: NONE
    │        │  └ value: %85 = .type_init - tok[108..114]
    │        │     ├ type: %81 = .identifier - tok[108..108]
    │        │     │  └ token: .identifier 'T'
    │        │     └ field_init_list: 1 items
    │        │        └ %84 = .field_init - tok[110..112]
    │        │           ├ name: %82 = .identifier - tok[110..110]
    │        │           │  └ token: .identifier 'bar'
    │        │           └ value: %83 = .number_literal - tok[112..112]
    │        │              └ token: .number_literal '123'
    │        ├ %87 = .comment_line - tok[115..116]
    │        │  └ token: .comment '// %5 = get_el_ptr %0 'bar' i=(0)        ; *i32@ptr:0'
    │        ├ %88 = .comment_line - tok[116..117]
    │        │  └ token: .comment '// %6 = load %5                          ; 123 i32'
    │        ├ %89 = .comment_line - tok[117..118]
    │        │  └ token: .comment '// %7 = alloc i32                        ; *i32@ptr:4'
    │        ├ %90 = .comment_line - tok[118..119]
    │        │  └ token: .comment '// %8 = store %7 %6                      ; void'
    │        └ %95 = .const_decl - tok[119..124]
    │           ├ name: %91 = .identifier - tok[120..120]
    │           │  └ token: .identifier 'bar'
    │           ├ type: NONE
    │           └ value: %94 = .prop_access - tok[122..124]
    │              ├ lhs: %92 = .identifier - tok[122..122]
    │              │  └ token: .identifier 'foo'
    │              └ rhs: %93 = .identifier - tok[124..124]
    │                 └ token: .identifier 'bar'
    ├ %98 = .comment_line - tok[127..128]
    │  └ token: .comment '// const global_foo = T { bar = 123 };'
    ├ %99 = .comment_line - tok[128..129]
    │  └ token: .comment '// fn struct_from_global() void {'
    ├ %100 = .comment_line - tok[129..130]
    │  └ token: .comment '//   // %0 = alloc T                          ; *T@ptr:0'
    ├ %101 = .comment_line - tok[130..131]
    │  └ token: .comment '//   // %1 = memcpy %0 %global_foo            ; void'
    ├ %102 = .comment_line - tok[131..132]
    │  └ token: .comment '//   const bar = global_foo;'
    ├ %103 = .comment_line - tok[132..133]
    │  └ token: .comment '// }'
    ├ %116 = .fn_decl - tok[133..151]
    │  ├ proto: %106 = .fn_proto - tok[134..137]
    │  │  ├ name: %104 = .identifier - tok[134..134]
    │  │  │  └ token: .identifier 'int_alloc'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %105 = .ty_void - tok[137..137]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %115 = .block - tok[138..150]
    │     └ list: 5 items
    │        ├ %107 = .comment_line - tok[139..140]
    │        │  └ token: .comment '// %0 = alloc i32                        ; *i32@ptr:0'
    │        ├ %108 = .comment_line - tok[140..141]
    │        │  └ token: .comment '// %1 = const 10                         ; 10 int'
    │        ├ %109 = .comment_line - tok[141..142]
    │        │  └ token: .comment '// %2 = as i32 %1                        ; 10 i32'
    │        ├ %110 = .comment_line - tok[142..143]
    │        │  └ token: .comment '// %3 = store %0 %2                      ; void'
    │        └ %114 = .const_decl - tok[143..148]
    │           ├ name: %111 = .identifier - tok[144..144]
    │           │  └ token: .identifier 'foo'
    │           ├ type: %112 = .ty_i32 - tok[146..146]
    │           │  └ token: .keyword_i32 'i32'
    │           └ value: %113 = .number_literal - tok[148..148]
    │              └ token: .number_literal '10'
    ├ %135 = .fn_decl - tok[151..176]
    │  ├ proto: %119 = .fn_proto - tok[152..155]
    │  │  ├ name: %117 = .identifier - tok[152..152]
    │  │  │  └ token: .identifier 'int_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %118 = .ty_void - tok[155..155]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %134 = .block - tok[156..175]
    │     └ list: 9 items
    │        ├ %120 = .comment_line - tok[157..158]
    │        │  └ token: .comment '// %0 = alloc i32                        ; *i32@ptr:0'
    │        ├ %121 = .comment_line - tok[158..159]
    │        │  └ token: .comment '// %1 = const 10                         ; 10 int'
    │        ├ %122 = .comment_line - tok[159..160]
    │        │  └ token: .comment '// %2 = as i32 %1                        ; 10 i32'
    │        ├ %123 = .comment_line - tok[160..161]
    │        │  └ token: .comment '// %3 = store %0 %2                      ; void'
    │        ├ %127 = .var_decl - tok[161..166]
    │        │  ├ name: %124 = .identifier - tok[162..162]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: %125 = .ty_i32 - tok[164..164]
    │        │  │  └ token: .keyword_i32 'i32'
    │        │  └ value: %126 = .number_literal - tok[166..166]
    │        │     └ token: .number_literal '10'
    │        ├ %128 = .comment_line - tok[168..169]
    │        │  └ token: .comment '// %4 = const 123                        ; 123 int'
    │        ├ %129 = .comment_line - tok[169..170]
    │        │  └ token: .comment '// %5 = as i32 %4                        ; 123 i32'
    │        ├ %130 = .comment_line - tok[170..171]
    │        │  └ token: .comment '// %6 = store %0 %5                      ; void'
    │        └ %133 = .assign - tok[171..173]
    │           ├ lhs: %131 = .identifier - tok[171..171]
    │           │  └ token: .identifier 'foo'
    │           └ rhs: %132 = .number_literal - tok[173..173]
    │              └ token: .number_literal '123'
    ├ %154 = .fn_decl - tok[176..202]
    │  ├ proto: %138 = .fn_proto - tok[177..180]
    │  │  ├ name: %136 = .identifier - tok[177..177]
    │  │  │  └ token: .identifier 'int_load'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %137 = .ty_void - tok[180..180]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %153 = .block - tok[181..201]
    │     └ list: 9 items
    │        ├ %139 = .comment_line - tok[182..183]
    │        │  └ token: .comment '// %0 = alloc i32                        ; *i32@ptr:0'
    │        ├ %140 = .comment_line - tok[183..184]
    │        │  └ token: .comment '// %1 = const 10                         ; 10 int'
    │        ├ %141 = .comment_line - tok[184..185]
    │        │  └ token: .comment '// %2 = as i32 %1                        ; 10 i32'
    │        ├ %142 = .comment_line - tok[185..186]
    │        │  └ token: .comment '// %3 = store %0 %2                      ; void'
    │        ├ %146 = .const_decl - tok[186..191]
    │        │  ├ name: %143 = .identifier - tok[187..187]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: %144 = .ty_i32 - tok[189..189]
    │        │  │  └ token: .keyword_i32 'i32'
    │        │  └ value: %145 = .number_literal - tok[191..191]
    │        │     └ token: .number_literal '10'
    │        ├ %147 = .comment_line - tok[193..194]
    │        │  └ token: .comment '// %4 = load i32 %0                      ; 10 i32'
    │        ├ %148 = .comment_line - tok[194..195]
    │        │  └ token: .comment '// %5 = alloc i32                        ; *i32@ptr:4'
    │        ├ %149 = .comment_line - tok[195..196]
    │        │  └ token: .comment '// %6 = store i32 %5 %4                  ; void'
    │        └ %152 = .const_decl - tok[196..199]
    │           ├ name: %150 = .identifier - tok[197..197]
    │           │  └ token: .identifier 'bar'
    │           ├ type: NONE
    │           └ value: %151 = .identifier - tok[199..199]
    │              └ token: .identifier 'foo'
    ├ %190 = .fn_decl - tok[202..248]
    │  ├ proto: %157 = .fn_proto - tok[203..206]
    │  │  ├ name: %155 = .identifier - tok[203..203]
    │  │  │  └ token: .identifier 'array_alloc'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %156 = .ty_void - tok[206..206]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %189 = .block - tok[207..247]
    │     └ list: 20 items
    │        ├ %158 = .comment_line - tok[208..209]
    │        │  └ token: .comment '// %0 = alloc [3]i32                        ; *[3]i32@ptr:0'
    │        ├ %159 = .comment_line - tok[209..210]
    │        │  └ token: .comment '// %1 = const 0                             ; 0 int'
    │        ├ %160 = .comment_line - tok[210..211]
    │        │  └ token: .comment '// %2 = as usize %1                         ; 0 usize'
    │        ├ %161 = .comment_line - tok[211..212]
    │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)     ; *i32@ptr:0'
    │        ├ %162 = .comment_line - tok[212..213]
    │        │  └ token: .comment '// %4 = const 1                             ; 1 int'
    │        ├ %163 = .comment_line - tok[213..214]
    │        │  └ token: .comment '// %5 = as i32 %4                           ; 1 i32'
    │        ├ %164 = .comment_line - tok[214..215]
    │        │  └ token: .comment '// %6 = store %3 %5                         ; void'
    │        ├ %165 = .comment_line - tok[215..216]
    │        │  └ token: .comment '// %7 = const 1                             ; 1 int'
    │        ├ %166 = .comment_line - tok[216..217]
    │        │  └ token: .comment '// %8 = as usize %7                         ; 1 usize'
    │        ├ %167 = .comment_line - tok[217..218]
    │        │  └ token: .comment '// %9 = get_el_ptr %0 i=(%8) offset=(4)     ; *i32@ptr:4'
    │        ├ %168 = .comment_line - tok[218..219]
    │        │  └ token: .comment '// %10 = const 2                            ; 2 int'
    │        ├ %169 = .comment_line - tok[219..220]
    │        │  └ token: .comment '// %11 = as i32 %10                         ; 2 i32'
    │        ├ %170 = .comment_line - tok[220..221]
    │        │  └ token: .comment '// %12 = store %9 %11                       ; void'
    │        ├ %171 = .comment_line - tok[221..222]
    │        │  └ token: .comment '// %13 = const 2                            ; 2 int'
    │        ├ %172 = .comment_line - tok[222..223]
    │        │  └ token: .comment '// %14 = as usize %13                       ; 2 usize'
    │        ├ %173 = .comment_line - tok[223..224]
    │        │  └ token: .comment '// %15 = get_el_ptr %0 i=(%14) offset=(8)   ; *i32@ptr:8'
    │        ├ %174 = .comment_line - tok[224..225]
    │        │  └ token: .comment '// %16 = const 3                            ; 3 int'
    │        ├ %175 = .comment_line - tok[225..226]
    │        │  └ token: .comment '// %17 = as i32 %16                         ; 3 i32'
    │        ├ %176 = .comment_line - tok[226..227]
    │        │  └ token: .comment '// %18 = store %15 %17                      ; void'
    │        └ %188 = .const_decl - tok[227..245]
    │           ├ name: %177 = .identifier - tok[228..228]
    │           │  └ token: .identifier 'foo'
    │           ├ type: %180 = .ty_array - tok[230..234]
    │           │  ├ size_expr: %178 = .number_literal - tok[231..231]
    │           │  │  └ token: .number_literal '3'
    │           │  └ type: %179 = .ty_i32 - tok[233..233]
    │           │     └ token: .keyword_i32 'i32'
    │           └ value: %187 = .array_init - tok[235..246]
    │              ├ type: %183 = .ty_array - tok[235..239]
    │              │  ├ size_expr: %181 = .number_literal - tok[236..236]
    │              │  │  └ token: .number_literal '3'
    │              │  └ type: %182 = .ty_i32 - tok[238..238]
    │              │     └ token: .keyword_i32 'i32'
    │              └ items_list: 3 items
    │                 ├ %184 = .number_literal - tok[240..240]
    │                 │  └ token: .number_literal '1'
    │                 ├ %185 = .number_literal - tok[242..242]
    │                 │  └ token: .number_literal '2'
    │                 └ %186 = .number_literal - tok[244..244]
    │                    └ token: .number_literal '3'
    ├ %237 = .fn_decl - tok[248..307]
    │  ├ proto: %193 = .fn_proto - tok[249..252]
    │  │  ├ name: %191 = .identifier - tok[249..249]
    │  │  │  └ token: .identifier 'array_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %192 = .ty_void - tok[252..252]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %236 = .block - tok[253..306]
    │     └ list: 27 items
    │        ├ %194 = .comment_line - tok[254..255]
    │        │  └ token: .comment '// %0 = alloc [3]i32                        ; *[3]i32@ptr:0'
    │        ├ %195 = .comment_line - tok[255..256]
    │        │  └ token: .comment '// %1 = const 0                             ; 0 int'
    │        ├ %196 = .comment_line - tok[256..257]
    │        │  └ token: .comment '// %2 = as usize %1                         ; 0 usize'
    │        ├ %197 = .comment_line - tok[257..258]
    │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)     ; *i32@ptr:0'
    │        ├ %198 = .comment_line - tok[258..259]
    │        │  └ token: .comment '// %4 = const 1                             ; 1 int'
    │        ├ %199 = .comment_line - tok[259..260]
    │        │  └ token: .comment '// %5 = as i32 %4                           ; 1 i32'
    │        ├ %200 = .comment_line - tok[260..261]
    │        │  └ token: .comment '// %6 = store %3 %5                         ; void'
    │        ├ %201 = .comment_line - tok[261..262]
    │        │  └ token: .comment '// %7 = const 1                             ; 1 int'
    │        ├ %202 = .comment_line - tok[262..263]
    │        │  └ token: .comment '// %8 = as usize %7                         ; 1 usize'
    │        ├ %203 = .comment_line - tok[263..264]
    │        │  └ token: .comment '// %9 = get_el_ptr %0 i=(%8) offset=(4)     ; *i32@ptr:4'
    │        ├ %204 = .comment_line - tok[264..265]
    │        │  └ token: .comment '// %10 = const 2                            ; 2 int'
    │        ├ %205 = .comment_line - tok[265..266]
    │        │  └ token: .comment '// %11 = as i32 %10                         ; 2 i32'
    │        ├ %206 = .comment_line - tok[266..267]
    │        │  └ token: .comment '// %12 = store %9 %11                       ; void'
    │        ├ %207 = .comment_line - tok[267..268]
    │        │  └ token: .comment '// %13 = const 2                            ; 2 int'
    │        ├ %208 = .comment_line - tok[268..269]
    │        │  └ token: .comment '// %14 = as usize %13                       ; 2 usize'
    │        ├ %209 = .comment_line - tok[269..270]
    │        │  └ token: .comment '// %15 = get_el_ptr %0 i=(%14) offset=(8)   ; *i32@ptr:8'
    │        ├ %210 = .comment_line - tok[270..271]
    │        │  └ token: .comment '// %16 = const 3                            ; 3 int'
    │        ├ %211 = .comment_line - tok[271..272]
    │        │  └ token: .comment '// %17 = as i32 %16                         ; 3 i32'
    │        ├ %212 = .comment_line - tok[272..273]
    │        │  └ token: .comment '// %18 = store %15 %17                      ; void'
    │        ├ %224 = .var_decl - tok[273..291]
    │        │  ├ name: %213 = .identifier - tok[274..274]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: %216 = .ty_array - tok[276..280]
    │        │  │  ├ size_expr: %214 = .number_literal - tok[277..277]
    │        │  │  │  └ token: .number_literal '3'
    │        │  │  └ type: %215 = .ty_i32 - tok[279..279]
    │        │  │     └ token: .keyword_i32 'i32'
    │        │  └ value: %223 = .array_init - tok[281..292]
    │        │     ├ type: %219 = .ty_array - tok[281..285]
    │        │     │  ├ size_expr: %217 = .number_literal - tok[282..282]
    │        │     │  │  └ token: .number_literal '3'
    │        │     │  └ type: %218 = .ty_i32 - tok[284..284]
    │        │     │     └ token: .keyword_i32 'i32'
    │        │     └ items_list: 3 items
    │        │        ├ %220 = .number_literal - tok[286..286]
    │        │        │  └ token: .number_literal '1'
    │        │        ├ %221 = .number_literal - tok[288..288]
    │        │        │  └ token: .number_literal '2'
    │        │        └ %222 = .number_literal - tok[290..290]
    │        │           └ token: .number_literal '3'
    │        ├ %225 = .comment_line - tok[293..294]
    │        │  └ token: .comment '// %19 = const 0                            ; 0 int'
    │        ├ %226 = .comment_line - tok[294..295]
    │        │  └ token: .comment '// %20 = as usize %19                       ; 0 usize'
    │        ├ %227 = .comment_line - tok[295..296]
    │        │  └ token: .comment '// %21 = get_el_ptr %0 i=(%20) offset=(0)   ; *i32@ptr:0'
    │        ├ %228 = .comment_line - tok[296..297]
    │        │  └ token: .comment '// %22 = const 4                            ; 4 int'
    │        ├ %229 = .comment_line - tok[297..298]
    │        │  └ token: .comment '// %23 = as i32 %22                         ; 4 i32'
    │        ├ %230 = .comment_line - tok[298..299]
    │        │  └ token: .comment '// %24 = store %21 %23                      ; void'
    │        └ %235 = .assign - tok[299..304]
    │           ├ lhs: %233 = .array_prop_access - tok[299..302]
    │           │  ├ lhs: %231 = .identifier - tok[299..299]
    │           │  │  └ token: .identifier 'foo'
    │           │  └ rhs: %232 = .number_literal - tok[301..301]
    │           │     └ token: .number_literal '0'
    │           └ rhs: %234 = .number_literal - tok[304..304]
    │              └ token: .number_literal '4'
    ├ %273 = .fn_decl - tok[307..353]
    │  ├ proto: %240 = .fn_proto - tok[308..311]
    │  │  ├ name: %238 = .identifier - tok[308..308]
    │  │  │  └ token: .identifier 'array_alloc_3'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %239 = .ty_void - tok[311..311]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %272 = .block - tok[312..352]
    │     └ list: 21 items
    │        ├ %241 = .comment_line - tok[313..314]
    │        │  └ token: .comment '// %0 = alloc [3]i32                        ; *[3]i32@ptr:0'
    │        ├ %242 = .comment_line - tok[314..315]
    │        │  └ token: .comment '// %1 = const 0                             ; 0 int'
    │        ├ %243 = .comment_line - tok[315..316]
    │        │  └ token: .comment '// %2 = as usize %1                         ; 0 usize'
    │        ├ %244 = .comment_line - tok[316..317]
    │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)     ; *i32@ptr:0'
    │        ├ %245 = .comment_line - tok[317..318]
    │        │  └ token: .comment '// %4 = const 1                             ; 1 int'
    │        ├ %246 = .comment_line - tok[318..319]
    │        │  └ token: .comment '// %5 = as i32 %4                           ; 1 i32'
    │        ├ %247 = .comment_line - tok[319..320]
    │        │  └ token: .comment '// %6 = store %3 %5                         ; void'
    │        ├ %248 = .comment_line - tok[320..321]
    │        │  └ token: .comment '// %7 = const 1                             ; 1 int'
    │        ├ %249 = .comment_line - tok[321..322]
    │        │  └ token: .comment '// %8 = as usize %7                         ; 1 usize'
    │        ├ %250 = .comment_line - tok[322..323]
    │        │  └ token: .comment '// %9 = get_el_ptr %0 i=(%8) offset=(4)     ; *i32@ptr:4'
    │        ├ %251 = .comment_line - tok[323..324]
    │        │  └ token: .comment '// %10 = const 2                            ; 2 int'
    │        ├ %252 = .comment_line - tok[324..325]
    │        │  └ token: .comment '// %11 = as i32 %10                         ; 2 i32'
    │        ├ %253 = .comment_line - tok[325..326]
    │        │  └ token: .comment '// %12 = store %9 %11                       ; void'
    │        ├ %254 = .comment_line - tok[326..327]
    │        │  └ token: .comment '// %13 = const 2                            ; 2 int'
    │        ├ %255 = .comment_line - tok[327..328]
    │        │  └ token: .comment '// %14 = as usize %13                       ; 2 usize'
    │        ├ %256 = .comment_line - tok[328..329]
    │        │  └ token: .comment '// %15 = get_el_ptr %0 i=(%14) offset=(8)   ; *i32@ptr:8'
    │        ├ %257 = .comment_line - tok[329..330]
    │        │  └ token: .comment '// %16 = const 3                            ; 3 int'
    │        ├ %258 = .comment_line - tok[330..331]
    │        │  └ token: .comment '// %17 = as i32 %16                         ; 3 i32'
    │        ├ %259 = .comment_line - tok[331..332]
    │        │  └ token: .comment '// %18 = store %15 %17                      ; void'
    │        ├ %268 = .const_decl - tok[332..345]
    │        │  ├ name: %260 = .identifier - tok[333..333]
    │        │  │  └ token: .identifier 'foo'
    │        │  ├ type: NONE
    │        │  └ value: %267 = .array_init - tok[335..346]
    │        │     ├ type: %263 = .ty_array - tok[335..339]
    │        │     │  ├ size_expr: %261 = .number_literal - tok[336..336]
    │        │     │  │  └ token: .number_literal '3'
    │        │     │  └ type: %262 = .ty_i32 - tok[338..338]
    │        │     │     └ token: .keyword_i32 'i32'
    │        │     └ items_list: 3 items
    │        │        ├ %264 = .number_literal - tok[340..340]
    │        │        │  └ token: .number_literal '1'
    │        │        ├ %265 = .number_literal - tok[342..342]
    │        │        │  └ token: .number_literal '2'
    │        │        └ %266 = .number_literal - tok[344..344]
    │        │           └ token: .number_literal '3'
    │        └ %271 = .const_decl - tok[347..350]
    │           ├ name: %269 = .identifier - tok[348..348]
    │           │  └ token: .identifier 'bar'
    │           ├ type: NONE
    │           └ value: %270 = .identifier - tok[350..350]
    │              └ token: .identifier 'foo'
    ├ %274 = .comment_line - tok[353..354]
    │  └ token: .comment '// // // %mem.data.0: [5]bchar = "Hello"'
    ├ %275 = .comment_line - tok[354..355]
    │  └ token: .comment '// // fn str_alloc() void {'
    ├ %276 = .comment_line - tok[355..356]
    │  └ token: .comment '// //   // %0 = alloc [5]bchar                    ; [..5]bchar@ptr:0'
    ├ %277 = .comment_line - tok[356..357]
    │  └ token: .comment '// //   // %1 = memcpy %0 %mem.data.0             ; void'
    ├ %278 = .comment_line - tok[357..358]
    │  └ token: .comment '// //   const foo = "Hello";'
    ├ %279 = .comment_line - tok[358..359]
    │  └ token: .comment '// // }'
    ├ %311 = .fn_decl - tok[359..404]
    │  ├ proto: %282 = .fn_proto - tok[360..363]
    │  │  ├ name: %280 = .identifier - tok[360..360]
    │  │  │  └ token: .identifier 'str_alloc_2'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %281 = .ty_void - tok[363..363]
    │  │  │  └ token: .keyword_void 'void'
    │  │  └ is_declaring_builtin: false
    │  └ body: %310 = .block - tok[364..403]
    │     └ list: 4 items
    │        ├ %283 = .comment_line - tok[365..366]
    │        │  └ token: .comment '// %0 = alloc [5]bchar                    ; [..5]bchar@ptr:0'
    │        ├ %284 = .comment_line - tok[366..367]
    │        │  └ token: .comment '// %1 = memcpy %0 %mem.data.0             ; void'
    │        ├ %308 = .comp_block - tok[367..402]
    │        │  └ node: %307 = .block - tok[368..401]
    │        │     └ list: 8 items
    │        │        ├ %287 = .var_decl - tok[369..372]
    │        │        │  ├ name: %285 = .identifier - tok[370..370]
    │        │        │  │  └ token: .identifier 'foo'
    │        │        │  ├ type: NONE
    │        │        │  └ value: %286 = .string_literal - tok[372..372]
    │        │        │     └ token: .string_literal '"Hello"'
    │        │        ├ %288 = .comment_line - tok[374..375]
    │        │        │  └ token: .comment '// %2 = usize.const 0                     ; 0 usize'
    │        │        ├ %289 = .comment_line - tok[375..376]
    │        │        │  └ token: .comment '// %3 = get_el_ptr %0 i=(%2) offset=(0)   ; *bchar@ptr:0'
    │        │        ├ %290 = .comment_line - tok[376..377]
    │        │        │  └ token: .comment '// %4 = bchar.const 'h'                   ; 'h' bchar'
    │        │        ├ %291 = .comment_line - tok[377..378]
    │        │        │  └ token: .comment '// %5 = store %3 %4                       ; void'
    │        │        ├ %296 = .const_decl - tok[378..384]
    │        │        │  ├ name: %292 = .identifier - tok[379..379]
    │        │        │  │  └ token: .identifier 'a'
    │        │        │  ├ type: NONE
    │        │        │  └ value: %295 = .array_prop_access - tok[381..384]
    │        │        │     ├ lhs: %293 = .identifier - tok[381..381]
    │        │        │     │  └ token: .identifier 'foo'
    │        │        │     └ rhs: %294 = .number_literal - tok[383..383]
    │        │        │        └ token: .number_literal '0'
    │        │        ├ %301 = .assign - tok[386..391]
    │        │        │  ├ lhs: %299 = .array_prop_access - tok[386..389]
    │        │        │  │  ├ lhs: %297 = .identifier - tok[386..386]
    │        │        │  │  │  └ token: .identifier 'foo'
    │        │        │  │  └ rhs: %298 = .number_literal - tok[388..388]
    │        │        │  │     └ token: .number_literal '0'
    │        │        │  └ rhs: %300 = .char_literal - tok[391..391]
    │        │        │     └ token: .char_literal ''h''
    │        │        └ %306 = .const_decl - tok[393..399]
    │        │           ├ name: %302 = .identifier - tok[394..394]
    │        │           │  └ token: .identifier 'b'
    │        │           ├ type: NONE
    │        │           └ value: %305 = .array_prop_access - tok[396..399]
    │        │              ├ lhs: %303 = .identifier - tok[396..396]
    │        │              │  └ token: .identifier 'foo'
    │        │              └ rhs: %304 = .number_literal - tok[398..398]
    │        │                 └ token: .number_literal '0'
    │        └ %309 = .comment_line - tok[402..403]
    │           └ token: .comment '//  = 'h';'
    ├ %321 = .fn_decl - tok[404..417]
    │  ├ proto: %317 = .fn_proto - tok[405..411]
    │  │  ├ name: %312 = .identifier - tok[405..405]
    │  │  │  └ token: .identifier 'foo'
    │  │  ├ params_list: 1 items
    │  │  │  └ %313 = .fn_param - tok[407..409]
    │  │  │     ├ name: %314 = .identifier - tok[407..407]
    │  │  │     │  └ token: .identifier 'a'
    │  │  │     └ type: %315 = .ty_i32 - tok[409..409]
    │  │  │        └ token: .keyword_i32 'i32'
    │  │  ├ return_type: %316 = .ty_i32 - tok[411..411]
    │  │  │  └ token: .keyword_i32 'i32'
    │  │  └ is_declaring_builtin: false
    │  └ body: %320 = .block - tok[412..416]
    │     └ list: 1 items
    │        └ %319 = .ret_expression - tok[413..414]
    │           └ node: %318 = .identifier - tok[414..414]
    │              └ token: .identifier 'a'
    ├ %333 = .fn_decl - tok[417..433]
    │  ├ proto: %327 = .fn_proto - tok[418..424]
    │  │  ├ name: %322 = .identifier - tok[418..418]
    │  │  │  └ token: .identifier 'bar'
    │  │  ├ params_list: 1 items
    │  │  │  └ %323 = .fn_param - tok[420..422]
    │  │  │     ├ name: %324 = .identifier - tok[420..420]
    │  │  │     │  └ token: .identifier 'a'
    │  │  │     └ type: %325 = .ty_i32 - tok[422..422]
    │  │  │        └ token: .keyword_i32 'i32'
    │  │  ├ return_type: %326 = .ty_i32 - tok[424..424]
    │  │  │  └ token: .keyword_i32 'i32'
    │  │  └ is_declaring_builtin: false
    │  └ body: %332 = .block - tok[425..432]
    │     └ list: 1 items
    │        └ %331 = .ret_expression - tok[426..430]
    │           └ node: %330 = .fn_call - tok[427..430]
    │              ├ callee: %328 = .identifier - tok[427..427]
    │              │  └ token: .identifier 'rec'
    │              └ args_list: 1 items
    │                 └ %329 = .identifier - tok[429..429]
    │                    └ token: .identifier 'a'
    ├ %355 = .fn_decl - tok[433..463]
    │  ├ proto: %339 = .fn_proto - tok[434..440]
    │  │  ├ name: %334 = .identifier - tok[434..434]
    │  │  │  └ token: .identifier 'rec'
    │  │  ├ params_list: 1 items
    │  │  │  └ %335 = .fn_param - tok[436..438]
    │  │  │     ├ name: %336 = .identifier - tok[436..436]
    │  │  │     │  └ token: .identifier 'a'
    │  │  │     └ type: %337 = .ty_i32 - tok[438..438]
    │  │  │        └ token: .keyword_i32 'i32'
    │  │  ├ return_type: %338 = .ty_i32 - tok[440..440]
    │  │  │  └ token: .keyword_i32 'i32'
    │  │  └ is_declaring_builtin: false
    │  └ body: %354 = .block - tok[441..462]
    │     └ list: 2 items
    │        ├ %351 = .if_expr - tok[442..458]
    │        │  ├ condition: %342 = .lt - tok[444..446]
    │        │  │  ├ lhs: %340 = .identifier - tok[444..444]
    │        │  │  │  └ token: .identifier 'a'
    │        │  │  └ rhs: %341 = .number_literal - tok[446..446]
    │        │  │     └ token: .number_literal '10'
    │        │  ├ then_branch: %350 = .block - tok[448..458]
    │        │  │  └ list: 2 items
    │        │  │     ├ %348 = .ret_expression - tok[449..455]
    │        │  │     │  └ node: %347 = .fn_call - tok[450..455]
    │        │  │     │     ├ callee: %343 = .identifier - tok[450..450]
    │        │  │     │     │  └ token: .identifier 'bar'
    │        │  │     │     └ args_list: 1 items
    │        │  │     │        └ %346 = .mul - tok[452..454]
    │        │  │     │           ├ lhs: %344 = .number_literal - tok[452..452]
    │        │  │     │           │  └ token: .number_literal '2'
    │        │  │     │           └ rhs: %345 = .identifier - tok[454..454]
    │        │  │     │              └ token: .identifier 'a'
    │        │  │     └ %349 = .comment_line - tok[457..458]
    │        │  │        └ token: .comment '// return 2 * a;'
    │        │  └ else_branch: NONE
    │        └ %353 = .ret_expression - tok[459..460]
    │           └ node: %352 = .identifier - tok[460..460]
    │              └ token: .identifier 'a'
    ├ %406 = .fn_decl - tok[463..538]
    │  ├ proto: %358 = .fn_proto - tok[464..467]
    │  │  ├ name: %356 = .identifier - tok[464..464]
    │  │  │  └ token: .identifier 'sum_array'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %357 = .ty_i32 - tok[467..467]
    │  │  │  └ token: .keyword_i32 'i32'
    │  │  └ is_declaring_builtin: false
    │  └ body: %405 = .block - tok[468..537]
    │     └ list: 5 items
    │        ├ %371 = .const_decl - tok[469..489]
    │        │  ├ name: %359 = .identifier - tok[470..470]
    │        │  │  └ token: .identifier 'arr'
    │        │  ├ type: %362 = .ty_array - tok[472..476]
    │        │  │  ├ size_expr: %360 = .number_literal - tok[473..473]
    │        │  │  │  └ token: .number_literal '4'
    │        │  │  └ type: %361 = .ty_i32 - tok[475..475]
    │        │  │     └ token: .keyword_i32 'i32'
    │        │  └ value: %370 = .array_init - tok[477..490]
    │        │     ├ type: %365 = .ty_array - tok[477..481]
    │        │     │  ├ size_expr: %363 = .number_literal - tok[478..478]
    │        │     │  │  └ token: .number_literal '4'
    │        │     │  └ type: %364 = .ty_i32 - tok[480..480]
    │        │     │     └ token: .keyword_i32 'i32'
    │        │     └ items_list: 4 items
    │        │        ├ %366 = .number_literal - tok[482..482]
    │        │        │  └ token: .number_literal '1'
    │        │        ├ %367 = .number_literal - tok[484..484]
    │        │        │  └ token: .number_literal '2'
    │        │        ├ %368 = .number_literal - tok[486..486]
    │        │        │  └ token: .number_literal '3'
    │        │        └ %369 = .number_literal - tok[488..488]
    │        │           └ token: .number_literal '4'
    │        ├ %375 = .var_decl - tok[490..495]
    │        │  ├ name: %372 = .identifier - tok[491..491]
    │        │  │  └ token: .identifier 'i'
    │        │  ├ type: %373 = .ty_i32 - tok[493..493]
    │        │  │  └ token: .keyword_i32 'i32'
    │        │  └ value: %374 = .number_literal - tok[495..495]
    │        │     └ token: .number_literal '0'
    │        ├ %379 = .var_decl - tok[497..502]
    │        │  ├ name: %376 = .identifier - tok[498..498]
    │        │  │  └ token: .identifier 'sum'
    │        │  ├ type: %377 = .ty_i32 - tok[500..500]
    │        │  │  └ token: .keyword_i32 'i32'
    │        │  └ value: %378 = .number_literal - tok[502..502]
    │        │     └ token: .number_literal '0'
    │        ├ %402 = .while_loop - tok[504..533]
    │        │  ├ condition: %388 = .lt - tok[506..515]
    │        │  │  ├ lhs: %380 = .identifier - tok[506..506]
    │        │  │  │  └ token: .identifier 'i'
    │        │  │  └ rhs: %387 = .fn_call - tok[508..515]
    │        │  │     ├ callee: %385 = .builtin_prop_access - tok[508..512]
    │        │  │     │  ├ lhs: %383 = .prop_access - tok[508..510]
    │        │  │     │  │  ├ lhs: %381 = .identifier - tok[508..508]
    │        │  │     │  │  │  └ token: .identifier 'arr'
    │        │  │     │  │  └ rhs: %382 = .identifier - tok[510..510]
    │        │  │     │  │     └ token: .identifier 'len'
    │        │  │     │  └ rhs: %384 = .identifier - tok[512..512]
    │        │  │     │     └ token: .identifier 'as'
    │        │  │     └ args_list: 1 items
    │        │  │        └ %386 = .ty_i32 - tok[514..514]
    │        │  │           └ token: .keyword_i32 'i32'
    │        │  └ body: %401 = .block - tok[517..533]
    │        │     └ list: 2 items
    │        │        ├ %395 = .assign - tok[518..525]
    │        │        │  ├ lhs: %389 = .identifier - tok[518..518]
    │        │        │  │  └ token: .identifier 'sum'
    │        │        │  └ rhs: %394 = .add - tok[520..525]
    │        │        │     ├ lhs: %390 = .identifier - tok[520..520]
    │        │        │     │  └ token: .identifier 'sum'
    │        │        │     └ rhs: %393 = .array_prop_access - tok[522..525]
    │        │        │        ├ lhs: %391 = .identifier - tok[522..522]
    │        │        │        │  └ token: .identifier 'arr'
    │        │        │        └ rhs: %392 = .identifier - tok[524..524]
    │        │        │           └ token: .identifier 'i'
    │        │        └ %400 = .assign - tok[527..531]
    │        │           ├ lhs: %396 = .identifier - tok[527..527]
    │        │           │  └ token: .identifier 'i'
    │        │           └ rhs: %399 = .add - tok[529..531]
    │        │              ├ lhs: %397 = .identifier - tok[529..529]
    │        │              │  └ token: .identifier 'i'
    │        │              └ rhs: %398 = .number_literal - tok[531..531]
    │        │                 └ token: .number_literal '1'
    │        └ %404 = .ret_expression - tok[534..535]
    │           └ node: %403 = .identifier - tok[535..535]
    │              └ token: .identifier 'sum'
    ├ %407 = .comment_line - tok[538..539]
    │  └ token: .comment '// pub fn fib2() i32 {'
    ├ %408 = .comment_line - tok[539..540]
    │  └ token: .comment '//  comp {'
    ├ %409 = .comment_line - tok[540..541]
    │  └ token: .comment '//   var n: i32 = 10'
    ├ %410 = .comment_line - tok[541..542]
    │  └ token: .comment '//  var a:i32 = 0'
    ├ %411 = .comment_line - tok[542..543]
    │  └ token: .comment '//   var b:i32 = 1'
    ├ %412 = .comment_line - tok[543..544]
    │  └ token: .comment '//   if (n > 0) {'
    ├ %413 = .comment_line - tok[544..545]
    │  └ token: .comment '//     while (n > 1) {'
    ├ %414 = .comment_line - tok[545..546]
    │  └ token: .comment '//       var t:i32 = a + b'
    ├ %415 = .comment_line - tok[546..547]
    │  └ token: .comment '//       a = b'
    ├ %416 = .comment_line - tok[547..548]
    │  └ token: .comment '//       b = t'
    ├ %417 = .comment_line - tok[548..549]
    │  └ token: .comment '//       n = n - 1'
    ├ %418 = .comment_line - tok[549..550]
    │  └ token: .comment '//     }'
    ├ %419 = .comment_line - tok[550..551]
    │  └ token: .comment '//     return b'
    ├ %420 = .comment_line - tok[551..552]
    │  └ token: .comment '//   }'
    ├ %421 = .comment_line - tok[552..553]
    │  └ token: .comment '//   return a'
    ├ %422 = .comment_line - tok[553..554]
    │  └ token: .comment '//  }'
    ├ %423 = .comment_line - tok[554..555]
    │  └ token: .comment '// }'
    ├ %441 = .fn_decl - tok[555..579]
    │  ├ proto: %426 = .fn_proto - tok[556..559]
    │  │  ├ name: %424 = .identifier - tok[556..556]
    │  │  │  └ token: .identifier 'explicit_casting'
    │  │  ├ params_list: 0 items
    │  │  ├ return_type: %425 = .ty_i32 - tok[559..559]
    │  │  │  └ token: .keyword_i32 'i32'
    │  │  └ is_declaring_builtin: false
    │  └ body: %440 = .block - tok[560..578]
    │     └ list: 1 items
    │        └ %439 = .fn_call - tok[561..576]
    │           ├ callee: %437 = .builtin_prop_access - tok[561..573]
    │           │  ├ lhs: %435 = .fn_call - tok[561..571]
    │           │  │  ├ callee: %433 = .builtin_prop_access - tok[561..568]
    │           │  │  │  ├ lhs: %431 = .fn_call - tok[561..566]
    │           │  │  │  │  ├ callee: %429 = .builtin_prop_access - tok[561..563]
    │           │  │  │  │  │  ├ lhs: %427 = .number_literal - tok[561..561]
    │           │  │  │  │  │  │  └ token: .number_literal '123.2'
    │           │  │  │  │  │  └ rhs: %428 = .identifier - tok[563..563]
    │           │  │  │  │  │     └ token: .identifier 'as'
    │           │  │  │  │  └ args_list: 1 items
    │           │  │  │  │     └ %430 = .ty_i32 - tok[565..565]
    │           │  │  │  │        └ token: .keyword_i32 'i32'
    │           │  │  │  └ rhs: %432 = .identifier - tok[568..568]
    │           │  │  │     └ token: .identifier 'as'
    │           │  │  └ args_list: 1 items
    │           │  │     └ %434 = .ty_u8 - tok[570..570]
    │           │  │        └ token: .keyword_u8 'u8'
    │           │  └ rhs: %436 = .identifier - tok[573..573]
    │           │     └ token: .identifier 'as'
    │           └ args_list: 1 items
    │              └ %438 = .ty_f32 - tok[575..575]
    │                 └ token: .keyword_f32 'f32'
    ├ %442 = .comment_line - tok[579..580]
    │  └ token: .comment '// type K = struct {'
    ├ %443 = .comment_line - tok[580..581]
    │  └ token: .comment '//  pub fn foo_add_child(a: i32, b: i32) i32 {'
    ├ %444 = .comment_line - tok[581..582]
    │  └ token: .comment '//     return a + b;'
    ├ %445 = .comment_line - tok[582..583]
    │  └ token: .comment '//   }'
    ├ %446 = .comment_line - tok[583..584]
    │  └ token: .comment '// }'
    ├ %447 = .comment_line - tok[584..585]
    │  └ token: .comment '// fn bar_add(a: i32, b: i32) i32 {'
    ├ %448 = .comment_line - tok[585..586]
    │  └ token: .comment '//   return a + b;'
    ├ %449 = .comment_line - tok[586..587]
    │  └ token: .comment '// }'
    ├ %450 = .comment_line - tok[587..588]
    │  └ token: .comment '// // fn foo_add(a: i32, b: i32) i32 {'
    ├ %451 = .comment_line - tok[588..589]
    │  └ token: .comment '// //   return a + b;'
    ├ %452 = .comment_line - tok[589..590]
    │  └ token: .comment '// // }'
    ├ %453 = .comment_line - tok[590..591]
    │  └ token: .comment '// fn namespaced() void {'
    ├ %454 = .comment_line - tok[591..592]
    │  └ token: .comment '//   const a = K.foo_add_child(1, 2);'
    ├ %455 = .comment_line - tok[592..593]
    │  └ token: .comment '// }'
    ├ %456 = .comment_line - tok[593..594]
    │  └ token: .comment '// fn global() void {'
    ├ %457 = .comment_line - tok[594..595]
    │  └ token: .comment '//   const b = bar_add(1, 2);'
    ├ %458 = .comment_line - tok[595..596]
    │  └ token: .comment '// }'
    ├ %459 = .comment_line - tok[596..597]
    │  └ token: .comment '// fn builtin() void {'
    ├ %460 = .comment_line - tok[597..598]
    │  └ token: .comment '//   const c = 2:as(i32);'
    ├ %461 = .comment_line - tok[598..599]
    │  └ token: .comment '// }'
    ├ %462 = .comment_line - tok[599..600]
    │  └ token: .comment '// export fn fib(n: i32) i32 {'
    ├ %463 = .comment_line - tok[600..601]
    │  └ token: .comment '//  var a:i32 = 0'
    ├ %464 = .comment_line - tok[601..602]
    │  └ token: .comment '//   var b:i32 = 1'
    ├ %465 = .comment_line - tok[602..603]
    │  └ token: .comment '//   if (n > 0) {'
    ├ %466 = .comment_line - tok[603..604]
    │  └ token: .comment '//     while (n > 1) {'
    ├ %467 = .comment_line - tok[604..605]
    │  └ token: .comment '//       var t:i32 = a + b'
    ├ %468 = .comment_line - tok[605..606]
    │  └ token: .comment '//       a = b'
    ├ %469 = .comment_line - tok[606..607]
    │  └ token: .comment '//       b = t'
    ├ %470 = .comment_line - tok[607..608]
    │  └ token: .comment '//       n = n - 1'
    ├ %471 = .comment_line - tok[608..609]
    │  └ token: .comment '//     }'
    ├ %472 = .comment_line - tok[609..610]
    │  └ token: .comment '//     return b'
    ├ %473 = .comment_line - tok[610..611]
    │  └ token: .comment '//   }'
    ├ %474 = .comment_line - tok[611..612]
    │  └ token: .comment '// //   return a'
    ├ %475 = .comment_line - tok[612..613]
    │  └ token: .comment '// }'
    ├ %476 = .comment_line - tok[613..614]
    │  └ token: .comment '// type R = struct {'
    ├ %477 = .comment_line - tok[614..615]
    │  └ token: .comment '//   a: i8,'
    ├ %478 = .comment_line - tok[615..616]
    │  └ token: .comment '//   b: i32,'
    ├ %479 = .comment_line - tok[616..617]
    │  └ token: .comment '// }'
    ├ %480 = .comment_line - tok[617..618]
    │  └ token: .comment '// export fn main() void {'
    ├ %481 = .comment_line - tok[618..619]
    │  └ token: .comment '//    const foo: [2]i32 = [2]i32{1, 2};'
    ├ %482 = .comment_line - tok[619..620]
    │  └ token: .comment '//    const bar: [3]i32 = [3]i32{3, 4, 5};'
    ├ %483 = .comment_line - tok[620..621]
    │  └ token: .comment '//    const st = R{'
    ├ %484 = .comment_line - tok[621..622]
    │  └ token: .comment '//     a = 1,'
    ├ %485 = .comment_line - tok[622..623]
    │  └ token: .comment '//     b = 2,'
    ├ %486 = .comment_line - tok[623..624]
    │  └ token: .comment '//    };'
    ├ %487 = .comment_line - tok[624..625]
    │  └ token: .comment '//    const n:i32 = 2;'
    ├ %488 = .comment_line - tok[625..626]
    │  └ token: .comment '// }'
    ├ %489 = .comment_line - tok[626..627]
    │  └ token: .comment '// // fn aaaa(a: i32) void {'
    ├ %490 = .comment_line - tok[627..628]
    │  └ token: .comment '// // //   @comptime_log(a);'
    ├ %491 = .comment_line - tok[628..629]
    │  └ token: .comment '// // }'
    ├ %492 = .comment_line - tok[629..630]
    │  └ token: .comment '// // // fn main() void {'
    ├ %493 = .comment_line - tok[630..631]
    │  └ token: .comment '// // //   comp foo(123);'
    ├ %494 = .comment_line - tok[631..632]
    │  └ token: .comment '// // //   comp foo(456);'
    ├ %495 = .comment_line - tok[632..633]
    │  └ token: .comment '// // // }'
    ├ %496 = .comment_line - tok[633..634]
    │  └ token: .comment '// //   fn foo_addd(a: i32, b: i32) i32 {'
    ├ %497 = .comment_line - tok[634..635]
    │  └ token: .comment '// //     return a + b;'
    ├ %498 = .comment_line - tok[635..636]
    │  └ token: .comment '// //   }'
    ├ %499 = .comment_line - tok[636..637]
    │  └ token: .comment '// //   fn foo_ad3d(a: i32, b: i32) i32 {'
    ├ %500 = .comment_line - tok[637..638]
    │  └ token: .comment '// //     return a + b;'
    ├ %501 = .comment_line - tok[638..639]
    │  └ token: .comment '// //   }'
    ├ %502 = .comment_line - tok[639..640]
    │  └ token: .comment '// //     fn fdsdss(a: i32, b: i32) i32 {'
    ├ %503 = .comment_line - tok[640..641]
    │  └ token: .comment '// //     return a + b;'
    ├ %504 = .comment_line - tok[641..642]
    │  └ token: .comment '// //   }'
    ├ %505 = .comment_line - tok[642..643]
    │  └ token: .comment '// //   fn f(a: i32, b: i32) i32 {'
    ├ %506 = .comment_line - tok[643..644]
    │  └ token: .comment '// //     return a + b;'
    ├ %507 = .comment_line - tok[644..645]
    │  └ token: .comment '// //   }'
    ├ %508 = .comment_line - tok[645..646]
    │  └ token: .comment '// //   var a: i32 = 1;'
    ├ %509 = .comment_line - tok[646..647]
    │  └ token: .comment '//   fn foo_adddd() i32 {'
    ├ %510 = .comment_line - tok[647..648]
    │  └ token: .comment '//     const c: i32 = comp 2;'
    ├ %511 = .comment_line - tok[648..649]
    │  └ token: .comment '//     // return a + b;'
    ├ %512 = .comment_line - tok[649..650]
    │  └ token: .comment '//   }'
    ├ %513 = .comment_line - tok[650..651]
    │  └ token: .comment '// // fn woop() i32 {'
    ├ %514 = .comment_line - tok[651..652]
    │  └ token: .comment '// //   return  2;'
    ├ %515 = .comment_line - tok[652..653]
    │  └ token: .comment '// // }'
    ├ %516 = .comment_line - tok[653..654]
    │  └ token: .comment '// // fn throws() @Result(i32) {'
    ├ %517 = .comment_line - tok[654..655]
    │  └ token: .comment '// //   // return !SomeError;'
    ├ %518 = .comment_line - tok[655..656]
    │  └ token: .comment '// // }'
    ├ %519 = .comment_line - tok[656..657]
    │  └ token: .comment '// pub fn fib2() i32 {'
    ├ %520 = .comment_line - tok[657..658]
    │  └ token: .comment '//  comp {'
    ├ %521 = .comment_line - tok[658..659]
    │  └ token: .comment '//   var n: i32 = 10'
    ├ %522 = .comment_line - tok[659..660]
    │  └ token: .comment '//  var a:i32 = 0'
    ├ %523 = .comment_line - tok[660..661]
    │  └ token: .comment '//   var b:i32 = 1'
    ├ %524 = .comment_line - tok[661..662]
    │  └ token: .comment '//   if (n > 0) {'
    ├ %525 = .comment_line - tok[662..663]
    │  └ token: .comment '//     while (n > 1) {'
    ├ %526 = .comment_line - tok[663..664]
    │  └ token: .comment '//       const t:i32 = a + b'
    ├ %527 = .comment_line - tok[664..665]
    │  └ token: .comment '//       a = b'
    ├ %528 = .comment_line - tok[665..666]
    │  └ token: .comment '//       b = t'
    ├ %529 = .comment_line - tok[666..667]
    │  └ token: .comment '//       n = n - 1'
    ├ %530 = .comment_line - tok[667..668]
    │  └ token: .comment '//     }'
    ├ %531 = .comment_line - tok[668..669]
    │  └ token: .comment '//     return b'
    ├ %532 = .comment_line - tok[669..670]
    │  └ token: .comment '//   }'
    ├ %533 = .comment_line - tok[670..671]
    │  └ token: .comment '//   return a'
    ├ %534 = .comment_line - tok[671..672]
    │  └ token: .comment '//  }'
    ├ %535 = .comment_line - tok[672..673]
    │  └ token: .comment '// }'
    ├ %583 = .pub - tok[673..735]
    │  └ node: %582 = .fn_decl - tok[674..735]
    │     ├ proto: %541 = .fn_proto - tok[675..681]
    │     │  ├ name: %536 = .identifier - tok[675..675]
    │     │  │  └ token: .identifier 'fib'
    │     │  ├ params_list: 1 items
    │     │  │  └ %537 = .fn_param - tok[677..679]
    │     │  │     ├ name: %538 = .identifier - tok[677..677]
    │     │  │     │  └ token: .identifier 'n'
    │     │  │     └ type: %539 = .ty_i32 - tok[679..679]
    │     │  │        └ token: .keyword_i32 'i32'
    │     │  ├ return_type: %540 = .ty_i32 - tok[681..681]
    │     │  │  └ token: .keyword_i32 'i32'
    │     │  └ is_declaring_builtin: false
    │     └ body: %581 = .block - tok[682..734]
    │        └ list: 4 items
    │           ├ %545 = .var_decl - tok[683..688]
    │           │  ├ name: %542 = .identifier - tok[684..684]
    │           │  │  └ token: .identifier 'a'
    │           │  ├ type: %543 = .ty_i32 - tok[686..686]
    │           │  │  └ token: .keyword_i32 'i32'
    │           │  └ value: %544 = .number_literal - tok[688..688]
    │           │     └ token: .number_literal '0'
    │           ├ %549 = .var_decl - tok[689..694]
    │           │  ├ name: %546 = .identifier - tok[690..690]
    │           │  │  └ token: .identifier 'b'
    │           │  ├ type: %547 = .ty_i32 - tok[692..692]
    │           │  │  └ token: .keyword_i32 'i32'
    │           │  └ value: %548 = .number_literal - tok[694..694]
    │           │     └ token: .number_literal '1'
    │           ├ %578 = .if_expr - tok[695..731]
    │           │  ├ condition: %552 = .gt - tok[697..699]
    │           │  │  ├ lhs: %550 = .identifier - tok[697..697]
    │           │  │  │  └ token: .identifier 'n'
    │           │  │  └ rhs: %551 = .number_literal - tok[699..699]
    │           │  │     └ token: .number_literal '0'
    │           │  ├ then_branch: %577 = .block - tok[701..731]
    │           │  │  └ list: 2 items
    │           │  │     ├ %574 = .while_loop - tok[702..728]
    │           │  │     │  ├ condition: %555 = .gt - tok[704..706]
    │           │  │     │  │  ├ lhs: %553 = .identifier - tok[704..704]
    │           │  │     │  │  │  └ token: .identifier 'n'
    │           │  │     │  │  └ rhs: %554 = .number_literal - tok[706..706]
    │           │  │     │  │     └ token: .number_literal '1'
    │           │  │     │  └ body: %573 = .block - tok[708..728]
    │           │  │     │     └ list: 4 items
    │           │  │     │        ├ %561 = .var_decl - tok[709..716]
    │           │  │     │        │  ├ name: %556 = .identifier - tok[710..710]
    │           │  │     │        │  │  └ token: .identifier 't'
    │           │  │     │        │  ├ type: %557 = .ty_i32 - tok[712..712]
    │           │  │     │        │  │  └ token: .keyword_i32 'i32'
    │           │  │     │        │  └ value: %560 = .add - tok[714..716]
    │           │  │     │        │     ├ lhs: %558 = .identifier - tok[714..714]
    │           │  │     │        │     │  └ token: .identifier 'a'
    │           │  │     │        │     └ rhs: %559 = .identifier - tok[716..716]
    │           │  │     │        │        └ token: .identifier 'b'
    │           │  │     │        ├ %564 = .assign - tok[717..719]
    │           │  │     │        │  ├ lhs: %562 = .identifier - tok[717..717]
    │           │  │     │        │  │  └ token: .identifier 'a'
    │           │  │     │        │  └ rhs: %563 = .identifier - tok[719..719]
    │           │  │     │        │     └ token: .identifier 'b'
    │           │  │     │        ├ %567 = .assign - tok[720..722]
    │           │  │     │        │  ├ lhs: %565 = .identifier - tok[720..720]
    │           │  │     │        │  │  └ token: .identifier 'b'
    │           │  │     │        │  └ rhs: %566 = .identifier - tok[722..722]
    │           │  │     │        │     └ token: .identifier 't'
    │           │  │     │        └ %572 = .assign - tok[723..727]
    │           │  │     │           ├ lhs: %568 = .identifier - tok[723..723]
    │           │  │     │           │  └ token: .identifier 'n'
    │           │  │     │           └ rhs: %571 = .sub - tok[725..727]
    │           │  │     │              ├ lhs: %569 = .identifier - tok[725..725]
    │           │  │     │              │  └ token: .identifier 'n'
    │           │  │     │              └ rhs: %570 = .number_literal - tok[727..727]
    │           │  │     │                 └ token: .number_literal '1'
    │           │  │     └ %576 = .ret_expression - tok[729..730]
    │           │  │        └ node: %575 = .identifier - tok[730..730]
    │           │  │           └ token: .identifier 'b'
    │           │  └ else_branch: NONE
    │           └ %580 = .ret_expression - tok[732..733]
    │              └ node: %579 = .identifier - tok[733..733]
    │                 └ token: .identifier 'a'
    └ %593 = .fn_decl - tok[735..750]
       ├ proto: %586 = .fn_proto - tok[736..739]
       │  ├ name: %584 = .identifier - tok[736..736]
       │  │  └ token: .identifier 'main'
       │  ├ params_list: 0 items
       │  ├ return_type: %585 = .ty_void - tok[739..739]
       │  │  └ token: .keyword_void 'void'
       │  └ is_declaring_builtin: false
       └ body: %592 = .block - tok[740..749]
          └ list: 1 items
             └ %591 = .const_decl - tok[741..747]
                ├ name: %587 = .identifier - tok[742..742]
                │  └ token: .identifier 'a'
                ├ type: NONE
                └ value: %590 = .fn_call - tok[744..747]
                   ├ callee: %588 = .identifier - tok[744..744]
                   │  └ token: .identifier 'fib'
                   └ args_list: 1 items
                      └ %589 = .number_literal - tok[746..746]
                         └ token: .number_literal '10'
